Callables of arity 0: 218
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Awaitable[Any]]
    Callable[[], BaseBrowser]
    Callable[[], BaseBrowser]
    Callable[[], BaseBrowser]
    Callable[[], BaseHandler]
    Callable[[], DOMImplementation]
    Callable[[], DOMImplementation]
    Callable[[], DOMImplementation]
    Callable[[], DOMImplementation]
    Callable[[], Instance]
    Callable[[], Instance]
    Callable[[], Instance]
    Callable[[], Message]
    Callable[[], Message]
    Callable[[], Message]
    Callable[[], Message]
    Callable[[], Message]
    Callable[[], Message]
    Callable[[], Message]
    Callable[[], Message]
    Callable[[], None]
    Callable[[], None]
    Callable[[], None]
    Callable[[], None]
    Callable[[], None]
    Callable[[], None]
    Callable[[], None]
    Callable[[], None]
    Callable[[], None]
    Callable[[], None]
    Callable[[], None]
    Callable[[], None]
    Callable[[], None]
    Callable[[], None]
    Callable[[], None]
    Callable[[], None]
    Callable[[], None]
    Callable[[], None]
    Callable[[], None]
    Callable[[], None]
    Callable[[], None]
    Callable[[], None]
    Callable[[], None]
    Callable[[], None]
    Callable[[], None]
    Callable[[], None]
    Callable[[], None]
    Callable[[], None]
    Callable[[], None]
    Callable[[], None]
    Callable[[], None]
    Callable[[], None]
    Callable[[], None]
    Callable[[], None]
    Callable[[], None]
    Callable[[], None]
    Callable[[], None]
    Callable[[], Optional[_T]]
    Callable[[], Optional[_T]]
    Callable[[], Optional[_T]]
    Callable[[], Text]
    Callable[[], Text]
    Callable[[], VT]
    Callable[[], Value]
    Callable[[], Value]
    Callable[[], Value]
    Callable[[], Value]
    Callable[[], Value]
    Callable[[], _AggregateProtocol]
    Callable[[], _AggregateProtocol]
    Callable[[], _M]
    Callable[[], _M]
    Callable[[], _T]
    Callable[[], _T]
    Callable[[], _T]
    Callable[[], _T]
    Callable[[], _T]
    Callable[[], _T]
    Callable[[], _T]
    Callable[[], _T]
    Callable[[], _T]
    Callable[[], _T]
    Callable[[], _T]
    Callable[[], _T]
    Callable[[], _T]
    Callable[[], _T]
    Callable[[], _T]
    Callable[[], _T]
    Callable[[], _T]
    Callable[[], _T]
    Callable[[], _T]
    Callable[[], _T]
    Callable[[], _T]
    Callable[[], _T]
    Callable[[], _T]
    Callable[[], _T]
    Callable[[], _T]
    Callable[[], _VT]
    Callable[[], _VT]
    Callable[[], _VT]
    Callable[[], _VT]
    Callable[[], _VT]
    Callable[[], _VT]
    Callable[[], _VT]
    Callable[[], _VT]
    Callable[[], _VT]
    Callable[[], _VT]
    Callable[[], _VT]
    Callable[[], _VT]
    Callable[[], _VT]
    Callable[[], _VT]
    Callable[[], _V]
    Callable[[], bool]
    Callable[[], bytes]
    Callable[[], bytes]
    Callable[[], bytes]
    Callable[[], bytes]
    Callable[[], email.message.Message]
    Callable[[], float]
    Callable[[], float]
    Callable[[], float]
    Callable[[], float]
    Callable[[], float]
    Callable[[], float]
    Callable[[], float]
    Callable[[], float]
    Callable[[], float]
    Callable[[], float]
    Callable[[], int]
    Callable[[], int]
    Callable[[], str]
    Callable[[], str]
    Callable[[], str]
    Callable[[], str]
    Callable[[], str]
    Callable[[], str]
    Callable[[], streams.StreamReaderProtocol]
    Callable[[], streams.StreamReaderProtocol]
Callables of arity 1: 468
    Callable[[ActionFunction], ActionFunction]
    Callable[[AnalyzeTypeContext], Type]
    Callable[[AnalyzeTypeContext], Type]
    Callable[[AnalyzeTypeContext], Type]
    Callable[[AnyStr],
                                                             Match[AnyStr]]
    Callable[[AnyStr], Any]
    Callable[[AnyStr], Any]
    Callable[[Any], Any]
    Callable[[Any], Any]
    Callable[[Any], Any]
    Callable[[Any], Any]
    Callable[[Any], Any]
    Callable[[Any], Any]
    Callable[[Any], Any]
    Callable[[Any], Any]
    Callable[[Any], Any]
    Callable[[Any], Any]
    Callable[[Any], Any]
    Callable[[Any], Any]
    Callable[[Any], Any]
    Callable[[Any], Any]
    Callable[[Any], Any]
    Callable[[Any], None]
    Callable[[Any], None]
    Callable[[Any], None]
    Callable[[Any], None]
    Callable[[Any], None]
    Callable[[Any], None]
    Callable[[Any], None]
    Callable[[Any], None]
    Callable[[Any], None]
    Callable[[Any], None]
    Callable[[Any], None]
    Callable[[Any], _T]
    Callable[[Any], _T]
    Callable[[Any], _reducedtype]
    Callable[[Any], bool]
    Callable[[Any], bool]
    Callable[[Any], str]
    Callable[[Any], str]
    Callable[[Any], str]
    Callable[[Any], str]
    Callable[[Any], str]
    Callable[[Any], str]
    Callable[[AttributeContext], Type]
    Callable[[AttributeContext], Type]
    Callable[[AttributeContext], Type]
    Callable[[AttributeContext], Type]
    Callable[[AttributeContext], Type]
    Callable[[BaseException], None]
    Callable[[BaseException], None]
    Callable[[BaseException], None]
    Callable[[BaseException], None]
    Callable[[Callable[..., _T]], Callable[..., _T]]
    Callable[[Callable[..., _T]], Callable[..., _T]]
    Callable[[Callable[..., _T]], _lru_cache_wrapper[_T]]
    Callable[[Callable[..., _T]], _lru_cache_wrapper[_T]]
    Callable[[ClassDefContext], None]
    Callable[[ClassDefContext], None]
    Callable[[ClassDefContext], None]
    Callable[[ClassDefContext], None]
    Callable[[ClassDefContext], None]
    Callable[[ClassDefContext], None]
    Callable[[ClassDefContext], None]
    Callable[[ClassDefContext], None]
    Callable[[ClassDefContext], None]
    Callable[[DataDrivenTestCase], None]
    Callable[[DataDrivenTestCase], None]
    Callable[[DataDrivenTestCase], None]
    Callable[[Dict[Any, Any]], Any]
    Callable[[Dict[Any, Any]], Any]
    Callable[[Dict[Any, Any]], Any]
    Callable[[Dict[Any, Any]], Any]
    Callable[[Dict[str, Any]], Any]
    Callable[[Dict[str, Any]], Any]
    Callable[[Dict[str, Any]], None]
    Callable[[Dict[str, Any]], None]
    Callable[[DocTest], Any]
    Callable[[DocTest], Any]
    Callable[[DocTest], Any]
    Callable[[DocTest], Any]
    Callable[[DynamicClassDefContext], None]
    Callable[[DynamicClassDefContext], None]
    Callable[[Event[Canvas]], Any]
    Callable[[Event[Misc]], Any]
    Callable[[Event[Misc]], Any]
    Callable[[Event[Misc]], Any]
    Callable[[Event[Text]], Any]
    Callable[[Event[_W]], Any]
    Callable[[FunctionContext], Type]
    Callable[[FunctionContext], Type]
    Callable[[FunctionContext], Type]
    Callable[[FunctionContext], Type]
    Callable[[FunctionContext], Type]
    Callable[[FunctionContext], Type]
    Callable[[FunctionContext], Type]
    Callable[[FunctionSigContext], CallableType]
    Callable[[FunctionSigContext], CallableType]
    Callable[[FunctionSigContext], CallableType]
    Callable[[Future[_T]], Any]
    Callable[[IO[Any]], BabylMessage]
    Callable[[IO[Any]], BabylMessage]
    Callable[[IO[Any]], MHMessage]
    Callable[[IO[Any]], MHMessage]
    Callable[[IO[Any]], MMDFMessage]
    Callable[[IO[Any]], MMDFMessage]
    Callable[[IO[Any]], MaildirMessage]
    Callable[[IO[Any]], MaildirMessage]
    Callable[[IO[Any]], _MessageT]
    Callable[[IO[Any]], _MessageT]
    Callable[[IO[Any]], _MessageT]
    Callable[[IO[Any]], _MessageT]
    Callable[[IO[Any]], mboxMessage]
    Callable[[IO[Any]], mboxMessage]
    Callable[[Iterable[T]], T]
    Callable[[List[Any]], _T]
    Callable[[List[TestCase]], TestSuite]
    Callable[[List[Tuple[Any, Any]]], Any]
    Callable[[List[Tuple[Any, Any]]], Any]
    Callable[[List[Tuple[Any, Any]]], Any]
    Callable[[List[Tuple[Any, Any]]], Any]
    Callable[[List[Tuple[str, Any]]], Any]
    Callable[[List[Tuple[str, Any]]], Any]
    Callable[[List[Tuple[str, Any]]], _T]
    Callable[[MIMEApplication], None]
    Callable[[MIMEApplication], None]
    Callable[[MIMEAudio], None]
    Callable[[MIMEImage], None]
    Callable[[Match[AnyStr]], AnyStr]
    Callable[[Match[AnyStr]], AnyStr]
    Callable[[Match[AnyStr]], AnyStr]
    Callable[[Match[AnyStr]], AnyStr]
    Callable[[Match[AnyStr]], AnyStr]
    Callable[[Match[AnyStr]], AnyStr]
    Callable[[Match[AnyStr]], AnyStr]
    Callable[[Match[AnyStr]], AnyStr]
    Callable[[Match[AnyStr]], AnyStr]
    Callable[[Match[AnyStr]], AnyStr]
    Callable[[Match[_AnyStr2]], _AnyStr2]
    Callable[[Match[_AnyStr2]], _AnyStr2]
    Callable[[MethodContext], Type]
    Callable[[MethodContext], Type]
    Callable[[MethodContext], Type]
    Callable[[MethodContext], Type]
    Callable[[MethodContext], Type]
    Callable[[MethodContext], Type]
    Callable[[MethodSigContext], CallableType]
    Callable[[MethodSigContext], CallableType]
    Callable[[MethodSigContext], CallableType]
    Callable[[MethodSigContext], CallableType]
    Callable[[OSError], Any]
    Callable[[Optional[BaseException]], None]
    Callable[[Optional[BaseException]], None]
    Callable[[Optional[float]], struct_time]
    Callable[[Optional[float]], struct_time]
    Callable[[Path], bool]
    Callable[[Plugin], T]
    Callable[[ProperType], bool]
    Callable[[RType], str]
    Callable[[ReferenceType[_T]], Any]
    Callable[[ReferenceType[_T]], Any]
    Callable[[ReferenceType[_T]], Any]
    Callable[[Sequence[int]], bytes]
    Callable[[Sequence[int]], bytes]
    Callable[[Sequence[int]], bytes]
    Callable[[Sequence[int]], bytes]
    Callable[[Sized], int]
    Callable[[Specializer], Specializer]
    Callable[[StringVar], Any]
    Callable[[SupportsInt],
                                               int]
    Callable[[T], None]
    Callable[[T], None]
    Callable[[TarInfo], Optional[TarInfo]]
    Callable[[TarInfo], Optional[TarInfo]]
    Callable[[TarInfo], Optional[TarInfo]]
    Callable[[Tuple[int, str, _Pos, _Pos, str]], None]
    Callable[[Tuple[int, str, _Pos, _Pos, str]], None]
    Callable[[TypeVarId], bool]
    Callable[[Type[_T]], Type[_T]]
    Callable[[Type[_T]], Type[_T]]
    Callable[[Type[_T]], Type[_T]]
    Callable[[Type[_T]], Type[_T]]
    Callable[[Type[_T]], Type[_T]]
    Callable[[Type[_T]], Type[_T]]
    Callable[[Type[_T]], Type[_T]]
    Callable[[UnicodeError], Tuple[Union[str, bytes], int]]
    Callable[[UnicodeError], Tuple[Union[str, bytes], int]]
    Callable[[UnicodeError], Tuple[Union[str, bytes], int]]
    Callable[[UnicodeError], Tuple[Union[str, bytes], int]]
    Callable[[Unpickler], None]
    Callable[[UnraisableHookArgs], Any]
    Callable[[Value], None]
    Callable[[Value], Value]
    Callable[[Value], Value]
    Callable[[_AnyCallable], _AnyCallable]
    Callable[[_C], Any]
    Callable[[_C], Any]
    Callable[[_C], _C]
    Callable[[_C], _C]
    Callable[[_ExceptHookArgs], Any]
    Callable[[_FT], _FT]
    Callable[[_FT], _FT]
    Callable[[_FT], _FT]
    Callable[[_Reduce[_TypeT]], _TypeT]
    Callable[[_Reduce[_TypeT]], _TypeT]
    Callable[[_Reduce[_TypeT]], _TypeT]
    Callable[[_Reduce[_TypeT]], _TypeT]
    Callable[[_Reduce[_TypeT]], _TypeT]
    Callable[[_Reduce[_TypeT]], _TypeT]
    Callable[[_ReprFunc], _ReprFunc]
    Callable[[_S], Any]
    Callable[[_S], Any]
    Callable[[_S], Any]
    Callable[[_S], Any]
    Callable[[_S], Any]
    Callable[[_S], _T]
    Callable[[_S], _T]
    Callable[[_S], _T]
    Callable[[_S], _T]
    Callable[[_T1], SupportsLessThan]
    Callable[[_T1], SupportsLessThan]
    Callable[[_T1], _S]
    Callable[[_T1], _S]
    Callable[[_T1], _S]
    Callable[[_T1], _S]
    Callable[[_T1], _T2]
    Callable[[_T], Any]
    Callable[[_T], Any]
    Callable[[_T], Any]
    Callable[[_T], Any]
    Callable[[_T], Any]
    Callable[[_T], Any]
    Callable[[_T], Any]
    Callable[[_T], Any]
    Callable[[_T], Any]
    Callable[[_T], Any]
    Callable[[_T], Any]
    Callable[[_T], Any]
    Callable[[_T], Any]
    Callable[[_T], Any]
    Callable[[_T], Any]
    Callable[[_T], Any]
    Callable[[_T], Any]
    Callable[[_T], Any]
    Callable[[_T], Any]
    Callable[[_T], Any]
    Callable[[_T], Any]
    Callable[[_T], Any]
    Callable[[_T], Any]
    Callable[[_T], Any]
    Callable[[_T], Any]
    Callable[[_T], Any]
    Callable[[_T], Any]
    Callable[[_T], Any]
    Callable[[_T], Any]
    Callable[[_T], Any]
    Callable[[_T], Any]
    Callable[[_T], Any]
    Callable[[_T], Any]
    Callable[[_T], None]
    Callable[[_T], None]
    Callable[[_T], None]
    Callable[[_T], None]
    Callable[[_T], None]
    Callable[[_T], None]
    Callable[[_T], None]
    Callable[[_T], None]
    Callable[[_T], None]
    Callable[[_T], None]
    Callable[[_T], SupportsLessThan]
    Callable[[_T], SupportsLessThan]
    Callable[[_T], SupportsLessThan]
    Callable[[_T], SupportsLessThan]
    Callable[[_T], SupportsLessThan]
    Callable[[_T], SupportsLessThan]
    Callable[[_T], SupportsLessThan]
    Callable[[_T], SupportsLessThan]
    Callable[[_T], SupportsLessThan]
    Callable[[_T], SupportsLessThan]
    Callable[[_T], SupportsLessThan]
    Callable[[_T], SupportsLessThan]
    Callable[[_T], SupportsLessThan]
    Callable[[_T], SupportsLessThan]
    Callable[[_T], SupportsLessThan]
    Callable[[_T], Union[int, float, str, bytes]]
    Callable[[_T], Union[int, float, str, bytes]]
    Callable[[_T], _S]
    Callable[[_T], _T]
    Callable[[_T], _T]
    Callable[[_T], bool]
    Callable[[_T], bool]
    Callable[[_TypeT], Union[str, _Reduce[_TypeT]]]
    Callable[[_TypeT], Union[str, _Reduce[_TypeT]]]
    Callable[[_TypeT], Union[str, _Reduce[_TypeT]]]
    Callable[[_str], float]
    Callable[[_str], float]
    Callable[[_timerFunc], _timerFunc]
    Callable[[_timerFunc], _timerFunc]
    Callable[[bytes], Any]
    Callable[[bytes], Any]
    Callable[[bytes], Any]
    Callable[[bytes], Any]
    Callable[[bytes], Any]
    Callable[[bytes], Any]
    Callable[[bytes], Any]
    Callable[[bytes], Any]
    Callable[[bytes], Any]
    Callable[[bytes], Any]
    Callable[[bytes], Any]
    Callable[[bytes], Any]
    Callable[[bytes], Any]
    Callable[[bytes], Any]
    Callable[[bytes], None]
    Callable[[bytes], None]
    Callable[[bytes], Optional[bytes]]
    Callable[[bytes], Optional[bytes]]
    Callable[[bytes], Optional[bytes]]
    Callable[[bytes], bytes]
    Callable[[bytes], bytes]
    Callable[[bytes], bytes]
    Callable[[bytes], bytes]
    Callable[[float], None]
    Callable[[float], None]
    Callable[[float], int]
    Callable[[float], int]
    Callable[[float], int]
    Callable[[float], int]
    Callable[[futures.Future[Any]], None]
    Callable[[futures.Future[Any]], None]
    Callable[[int],
                                                         Type]
    Callable[[int],
                                                         Type]
    Callable[[int], Any]
    Callable[[int], Any]
    Callable[[int], None]
    Callable[[int], Tuple[_Text, ...]]
    Callable[[int], Tuple[str, ...]]
    Callable[[int], int]
    Callable[[int], int]
    Callable[[object], Any]
    Callable[[object], Any]
    Callable[[object], str]
    Callable[[object], str]
    Callable[[object], str]
    Callable[[object], str]
    Callable[[object], str]
    Callable[[object], type]
    Callable[[str], Any]
    Callable[[str], Any]
    Callable[[str], Any]
    Callable[[str], Any]
    Callable[[str], Any]
    Callable[[str], Any]
    Callable[[str], Any]
    Callable[[str], Any]
    Callable[[str], Any]
    Callable[[str], Any]
    Callable[[str], Any]
    Callable[[str], Any]
    Callable[[str], Any]
    Callable[[str], Any]
    Callable[[str], Any]
    Callable[[str], Any]
    Callable[[str], Any]
    Callable[[str], Any]
    Callable[[str], Any]
    Callable[[str], Any]
    Callable[[str], Any]
    Callable[[str], Any]
    Callable[[str], Any]
    Callable[[str], Any]
    Callable[[str], Any]
    Callable[[str], Any]
    Callable[[str], Any]
    Callable[[str], Any]
    Callable[[str], Any]
    Callable[[str], Any]
    Callable[[str], Any]
    Callable[[str], Any]
    Callable[[str], Any]
    Callable[[str], Any]
    Callable[[str], Any]
    Callable[[str], Any]
    Callable[[str], Any]
    Callable[[str], Any]
    Callable[[str], Any]
    Callable[[str], Any]
    Callable[[str], Any]
    Callable[[str], Any]
    Callable[[str], Any]
    Callable[[str], Any]
    Callable[[str], Any]
    Callable[[str], Any]
    Callable[[str], Any]
    Callable[[str], Any]
    Callable[[str], Any]
    Callable[[str], Any]
    Callable[[str], Any]
    Callable[[str], Any]
    Callable[[str], Any]
    Callable[[str], Any]
    Callable[[str], Any]
    Callable[[str], Any]
    Callable[[str], Any]
    Callable[[str], Any]
    Callable[[str], Any]
    Callable[[str], Any]
    Callable[[str], Instance]
    Callable[[str], Instance]
    Callable[[str], Instance]
    Callable[[str], Instance]
    Callable[[str], None]
    Callable[[str], None]
    Callable[[str], None]
    Callable[[str], None]
    Callable[[str], None]
    Callable[[str], None]
    Callable[[str], None]
    Callable[[str], None]
    Callable[[str], None]
    Callable[[str], None]
    Callable[[str], None]
    Callable[[str], None]
    Callable[[str], None]
    Callable[[str], None]
    Callable[[str], None]
    Callable[[str], None]
    Callable[[str], None]
    Callable[[str], None]
    Callable[[str], None]
    Callable[[str], None]
    Callable[[str], None]
    Callable[[str], Optional[CodecInfo]]
    Callable[[str], Optional[CodecInfo]]
    Callable[[str], Optional[List[str]]]
    Callable[[str], _T]
    Callable[[str], _T]
    Callable[[str], _T]
    Callable[[str], _T]
    Callable[[str], _T]
    Callable[[str], _T]
    Callable[[str], bool]
    Callable[[str], bool]
    Callable[[str], bool]
    Callable[[str], bool]
    Callable[[str], bytes]
    Callable[[str], float]
    Callable[[str], importlib.abc.PathEntryFinder]
    Callable[[str], int]
    Callable[[str], str]
    Callable[[str], str]
    Callable[[str], str]
    Callable[[str], str]
    Callable[[str], str]
    Callable[[str], str]
    Callable[[str], str]
    Callable[[str], str]
    Callable[[str], str]
    Callable[[str], str]
    Callable[[str], str]
    Callable[[str], str]
    Callable[[str], str]
    Callable[[str], str]
    Callable[[str], str]
    Callable[[str], str]
    Callable[[tkinter.Event[Treeview]], Any]
    Callable[[tkinter.StringVar], Any]
    Callable[[type], type]
    Callable[[types.MethodType], Any]
Callables of arity 2: 131
    Callable[
                [List[List[Expression]], CallableType],
                CallableType,
            ]
    Callable[[AbstractEventLoop, Generator[Any, None, _T]], Future[_T]]
    Callable[[AbstractEventLoop, Generator[Any, None, _T]], Future[_T]]
    Callable[[AbstractEventLoop, Generator[Any, None, _T]], Future[_T]]
    Callable[[AbstractEventLoop, Generator[Any, None, _T]], Future[_T]]
    Callable[[Action, Iterable[Tuple[Text, Action]]], Any]
    Callable[[Action, Iterable[Tuple[str, Action]]], Any]
    Callable[[Any, Any], None]
    Callable[[Any, Any], None]
    Callable[[Any, Any], None]
    Callable[[Any, Any], None]
    Callable[[Any, Any], None]
    Callable[[Any, Any], None]
    Callable[[Any, Any], None]
    Callable[[Any, Any], None]
    Callable[[Any, Any], None]
    Callable[[Any, List[_AnyStr]], Set[_AnyStr]]
    Callable[[Any, List[str]], Set[str]]
    Callable[[AnyStr, AnyStr], None]
    Callable[[AnyStr, AnyStr], None]
    Callable[[AnyStr, AnyStr], None]
    Callable[[AnyStr, AnyStr], None]
    Callable[[AnyStr, Callable[[AnyStr, AnyStr, AnyStr], AnyStr]], AnyStr]
    Callable[[AnyStr, Callable[[AnyStr, AnyStr, AnyStr], AnyStr]], AnyStr]
    Callable[[AnyStr, Callable[[AnyStr, AnyStr, AnyStr], AnyStr]], AnyStr]
    Callable[[AnyStr, List[AnyStr]], Iterable[AnyStr]]
    Callable[[Iterable[str], str], str]
    Callable[[List[Value], int], Value]
    Callable[[List[str], bool], None]
    Callable[[List[str], bool], None]
    Callable[[List[str], bool], None]
    Callable[[Optional[str], Tuple[_Marshallable, ...]], Union[Fault, Tuple[_Marshallable, ...]]]
    Callable[[Optional[str], Tuple[_Marshallable, ...]], Union[Fault, Tuple[_Marshallable, ...]]]
    Callable[[Reports, str], AbstractReporter]
    Callable[[StrOrBytesPath, str], IO[AnyStr]]
    Callable[[StrOrBytesPath, str], IO[AnyStr]]
    Callable[[StrOrBytesPath, str], IO[AnyStr]]
    Callable[[StrOrBytesPath, str], IO[AnyStr]]
    Callable[[StrOrBytesPath, str], IO[Any]]
    Callable[[StrPath, List[str]], Iterable[str]]
    Callable[[StrPath, List[str]], Iterable[str]]
    Callable[[Text, str], IO[AnyStr]]
    Callable[[Text, str], IO[AnyStr]]
    Callable[[Text, str], IO[Any]]
    Callable[[TextIO, TextIO], None]
    Callable[[Type, Type], bool]
    Callable[[Type, Type], bool]
    Callable[[Type, Type], bool]
    Callable[[Type, Type], bool]
    Callable[[Type, Type], bool]
    Callable[[Type, Type], bool]
    Callable[[Union[int, str], str], int]
    Callable[[Unmarshaller, str], None]
    Callable[[Unmarshaller, str], None]
    Callable[[Unpickler, Any], None]
    Callable[[Value, int], Value]
    Callable[[_T, _S], _T]
    Callable[[_T, _S], _T]
    Callable[[_T, _S], _T]
    Callable[[_T, _S], _T]
    Callable[[_T, _S], _T]
    Callable[[_T, _S], _T]
    Callable[[_T, _T], Any]
    Callable[[_T, _T], Any]
    Callable[[_T, _T], _T]
    Callable[[_T, _T], _T]
    Callable[[_T, _T], _T]
    Callable[[_T, _T], _T]
    Callable[[_T, _T], _T]
    Callable[[_T, _T], _T]
    Callable[[_T, _T], int]
    Callable[[_T, _T], int]
    Callable[[_T, _T], int]
    Callable[[_T, _T], int]
    Callable[[_T1, _T2], _S]
    Callable[[_T1, _T2], _S]
    Callable[[_T1, _T2], _S]
    Callable[[_T1, _T2], _S]
    Callable[[_next, _token], _callback]
    Callable[[_next, _token], _callback]
    Callable[[bytes, Optional[BinaryIO]], Optional[str]]
    Callable[[bytes, Optional[BinaryIO]], Optional[str]]
    Callable[[float, float], Any]
    Callable[[float, float], Any]
    Callable[[float, float], Any]
    Callable[[float, float], Any]
    Callable[[float, float], Any]
    Callable[[float, float], Any]
    Callable[[float, float], Any]
    Callable[[float, float], Any]
    Callable[[float, float], Any]
    Callable[[float, float], Any]
    Callable[[float, float], Any]
    Callable[[float, float], Any]
    Callable[[float, float], Any]
    Callable[[float, float], Any]
    Callable[[float, float], float]
    Callable[[int, float], Any]
    Callable[[int, float], float]
    Callable[[str, Any], None]
    Callable[[str, Callable[[Iterable[str], str], str]], None]
    Callable[[str, Context], Optional[SymbolTableNode]]
    Callable[[str, List[str]],
                                                    Iterable[str]]
    Callable[[str, List[str]], Iterable[str]]
    Callable[[str, T], None]
    Callable[[str, T], None]
    Callable[[str, Tuple[Any, ...]], Any]
    Callable[[str, Tuple[Any, ...]], Any]
    Callable[[str, Tuple[_Marshallable, ...]], _Marshallable]
    Callable[[str, Tuple[_Marshallable, ...]], _Marshallable]
    Callable[[str, _Model], Any]
    Callable[[str, _Model], Any]
    Callable[[str, bool], None]
    Callable[[str, int], Optional[str]]
    Callable[[str, int], Optional[str]]
    Callable[[str, str], Any]
    Callable[[str, str], Any]
    Callable[[str, str], Any]
    Callable[[str, str], Any]
    Callable[[str, str], Any]
    Callable[[str, str], Any]
    Callable[[str, str], List[str]]
    Callable[[str, str], None]
    Callable[[str, str], None]
    Callable[[str, str], None]
    Callable[[str, str], None]
    Callable[[str, str], None]
    Callable[[str, str], int]
    Callable[[str, str], str]
    Callable[[str, str], str]
    Callable[[str, str], str]
Callables of arity 3: 32
    Callable[[Any, Any, Any], Any]
    Callable[[Any, _AnyPath, Any], Any]
    Callable[[Any, str, Tuple[type, BaseException, TracebackType]],
                                  None]
    Callable[[AnyStr, AnyStr, AnyStr], AnyStr]
    Callable[[FrameType, str, Any], Any]
    Callable[[Marshaller, Any, Callable[[str], Any]], None]
    Callable[[Marshaller, str, Callable[[str], None]], None]
    Callable[[Optional[str], str, str], None]
    Callable[[Optional[str], str, str], None]
    Callable[[SSLObject, str, SSLContext], Union[None, int]]
    Callable[[Type[BaseException], BaseException, TracebackType], Any]
    Callable[[Type[BaseException], BaseException, TracebackType], Any]
    Callable[[_T, AnyStr, List[AnyStr]], Any]
    Callable[[_T, AnyStr, List[AnyStr]], Any]
    Callable[[_T, AnyStr, List[AnyStr]], Any]
    Callable[[_T, AnyStr, List[AnyStr]], Any]
    Callable[[_T1, _T2, _T3], _S]
    Callable[[_T1, _T2, _T3], _S]
    Callable[[_T1, _T2, _T3], _S]
    Callable[[_T1, _T2, _T3], _S]
    Callable[[int, int, int], None]
    Callable[[int, int, int], None]
    Callable[[int, int, int], object]
    Callable[[socket.socket, bytes, bytes], Any]
    Callable[[socket.socket, bytes, bytes], Any]
    Callable[[str, Optional[str], int], Any]
    Callable[[str, Optional[str], int], Any]
    Callable[[str, Union[Dict[str, str]], List[str]], Any]
    Callable[[str, Union[Dict[str, str]], List[str]], Any]
    Callable[[str, str, str], Any]
    Callable[[str, str, str], Any]
    Callable[[str, str, str], Any]
Callables of arity 4: 14
    Callable[[CallableType, Type, str, Context], None]
    Callable[[CallableType, Type, str, Context], None]
    Callable[[_T1, _T2, _T3, _T4], _S]
    Callable[[_T1, _T2, _T3, _T4], _S]
    Callable[[_T1, _T2, _T3, _T4], _S]
    Callable[[_T1, _T2, _T3, _T4], _S]
    Callable[[str, AnyStr, str, str], str]
    Callable[[str, Optional[str], Optional[str], Optional[str]], int]
    Callable[[str, Optional[str], Optional[str], Optional[str]], int]
    Callable[[str, Optional[str], Optional[str], bool], Any]
    Callable[[str, Optional[str], Optional[str], bool], Any]
    Callable[[str, Optional[str], str, Optional[str]], Any]
    Callable[[str, Optional[str], str, Optional[str]], Any]
    Callable[[str, Union[str, Sequence[str]], str, str], None]
Callables of arity 5: 8
    Callable[[_T1, _T2, _T3, _T4, _T5], _S]
    Callable[[_T1, _T2, _T3, _T4, _T5], _S]
    Callable[[_T1, _T2, _T3, _T4, _T5], _S]
    Callable[[_T1, _T2, _T3, _T4, _T5], _S]
    Callable[[str, Optional[str], str, Optional[str], str], Any]
    Callable[[str, Optional[str], str, Optional[str], str], Any]
    Callable[[str, str, str, Optional[str], bool], Any]
    Callable[[str, str, str, Optional[str], bool], Any]
Callables with arbitrary parameters: 290
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., AsyncContextManager[_T]]
    Callable[..., AsyncContextManager[_T]]
    Callable[..., AsyncIterator[_T]]
    Callable[..., AsyncIterator[_T]]
    Callable[..., Awaitable[Any]]
    Callable[..., BaseHTTPRequestHandler]
    Callable[..., BaseRequestHandler]
    Callable[..., BaseRequestHandler]
    Callable[..., BaseRequestHandler]
    Callable[..., BaseRequestHandler]
    Callable[..., BaseRequestHandler]
    Callable[..., BaseRequestHandler]
    Callable[..., BaseRequestHandler]
    Callable[..., BaseRequestHandler]
    Callable[..., BaseRequestHandler]
    Callable[..., BaseRequestHandler]
    Callable[..., BaseRequestHandler]
    Callable[..., BaseRequestHandler]
    Callable[..., ContextManager[_T]]
    Callable[..., Element]
    Callable[..., Element]
    Callable[..., Element]
    Callable[..., Element]
    Callable[..., GeneratorContextManager[_T]]
    Callable[..., Iterator[Case]]
    Callable[..., Iterator[_T]]
    Callable[..., Iterator[_T]]
    Callable[..., Iterator[_T]]
    Callable[..., LazyLoader]
    Callable[..., LogRecord]
    Callable[..., LogRecord]
    Callable[..., LogRecord]
    Callable[..., LogRecord]
    Callable[..., None]
    Callable[..., None]
    Callable[..., None]
    Callable[..., None]
    Callable[..., None]
    Callable[..., None]
    Callable[..., None]
    Callable[..., None]
    Callable[..., None]
    Callable[..., None]
    Callable[..., None]
    Callable[..., None]
    Callable[..., None]
    Callable[..., None]
    Callable[..., None]
    Callable[..., Optional[Tuple[float, float]]]
    Callable[..., Optional[Tuple[float, float]]]
    Callable[..., Optional[Tuple[float, float]]]
    Callable[..., Optional[Tuple[float, float]]]
    Callable[..., Optional[Tuple[float, float]]]
    Callable[..., SSLContext]
    Callable[..., SSLContext]
    Callable[..., Sequence[Any]]
    Callable[..., Union[str, Element]]
    Callable[..., Union[str, Element]]
    Callable[..., Union[str, Element]]
    Callable[..., _GeneratorContextManager[_T]]
    Callable[..., _R]
    Callable[..., _R]
    Callable[..., _S]
    Callable[..., _S]
    Callable[..., _S]
    Callable[..., _S]
    Callable[..., _S]
    Callable[..., _S]
    Callable[..., _T]
    Callable[..., _T]
    Callable[..., _T]
    Callable[..., _T]
    Callable[..., _T]
    Callable[..., _T]
    Callable[..., _T]
    Callable[..., _T]
    Callable[..., _T]
    Callable[..., _T]
    Callable[..., _T]
    Callable[..., _T]
    Callable[..., _T]
    Callable[..., _T]
    Callable[..., _T]
    Callable[..., _T]
    Callable[..., _T]
    Callable[..., _T]
    Callable[..., _T]
    Callable[..., _T]
    Callable[..., _T]
    Callable[..., _T]
    Callable[..., _T]
    Callable[..., _T]
    Callable[..., _T]
    Callable[..., _T]
    Callable[..., _T]
    Callable[..., _T]
    Callable[..., _T]
    Callable[..., _T]
    Callable[..., _T]
    Callable[..., _T]
    Callable[..., _T]
    Callable[..., _T]
    Callable[..., _T]
    Callable[..., _T]
    Callable[..., _T]
    Callable[..., _T]
    Callable[..., _T]
    Callable[..., _T]
    Callable[..., _T]
    Callable[..., _T]
    Callable[..., _T]
    Callable[..., _T]
    Callable[..., _T]
    Callable[..., _T]
    Callable[..., _T]
    Callable[..., _T]
    Callable[..., _T]
    Callable[..., _T]
    Callable[..., _T]
    Callable[..., _Text]
    Callable[..., object]
    Callable[..., object]
    Callable[..., object]
    Callable[..., str]
    Callable[..., types.ModuleType]
    Callable[..., types.ModuleType]
    Callable[..., types.ModuleType]
    Callable[..., types.ModuleType]
    Callable[..., types.ModuleType]
    Callable[..., types.ModuleType]
Callback Protocols: 35
    FileWrapper - def __call__(self, file: _Readable, block_size: int = ...) -> Iterable[bytes]: pass
    FileWrapper - def __call__(self, file: _Readable, block_size: int = ...) -> Iterable[bytes]: pass
    HTTPConnectionProtocol - def __call__(self, host: str, timeout: int = ..., **http_con_args: Any) -> HTTPConnection: pass
    IdentityFunction - def __call__(self, __x: _T) -> _T: pass
    IdentityFunction - def __call__(self, __x: _T) -> _T: pass
    StartResponse - def __call__(
        self, status: str, headers: List[Tuple[str, str]], exc_info: Optional[_OptExcInfo] = ...
    ) -> Callable[[bytes], Any]: pass
    StartResponse - def __call__(
        self, status: str, headers: List[Tuple[str, str]], exc_info: Optional[_OptExcInfo] = ...
    ) -> Callable[[bytes], Any]: pass
    _AcquireFunc - def __call__(self, block: bool = ..., timeout: Optional[float] = ...) -> bool: pass
    _AuthObject - @overload
    def __call__(self, challenge: None = ...) -> Optional[str]: pass
    _Decoder - def __call__(self, input: _Encoded, errors: str = ...) -> Tuple[_Decoded, int]: pass
    _Decoder - def __call__(self, input: bytes, errors: str = ...) -> Tuple[str, int]: pass
    _DispatchArity0 - def __call__(self) -> _Marshallable: pass
    _DispatchArity1 - def __call__(self, __arg1: _Marshallable) -> _Marshallable: pass
    _DispatchArity2 - def __call__(self, __arg1: _Marshallable, __arg2: _Marshallable) -> _Marshallable: pass
    _DispatchArity3 - def __call__(self, __arg1: _Marshallable, __arg2: _Marshallable, __arg3: _Marshallable) -> _Marshallable: pass
    _DispatchArity4 - def __call__(
        self, __arg1: _Marshallable, __arg2: _Marshallable, __arg3: _Marshallable, __arg4: _Marshallable
    ) -> _Marshallable: pass
    _DispatchArityN - def __call__(self, *args: _Marshallable) -> _Marshallable: pass
    _Encoder - def __call__(self, input: _Decoded, errors: str = ...) -> Tuple[_Encoded, int]: pass
    _Encoder - def __call__(self, input: str, errors: str = ...) -> Tuple[bytes, int]: pass
    _ExceptionReportingCallback - def __call__(self, __exc: Type[BaseException], __val: BaseException, __tb: TracebackType) -> Any: pass
    _FormatterClass - def __call__(self, prog: str) -> HelpFormatter: pass
    _FormatterClass - def __call__(self, prog: str) -> HelpFormatter: pass
    _IncrementalDecoder - def __call__(self, errors: str = ...) -> IncrementalDecoder: pass
    _IncrementalDecoder - def __call__(self, errors: str = ...) -> IncrementalDecoder: pass
    _IncrementalEncoder - def __call__(self, errors: str = ...) -> IncrementalEncoder: pass
    _IncrementalEncoder - def __call__(self, errors: str = ...) -> IncrementalEncoder: pass
    _PathOpenProtocol - def __call__(self, mode: str = ..., pwd: Optional[bytes] = ..., *, force_zip64: bool = ...) -> IO[bytes]: pass
    _PathOpenProtocol - def __call__(self, mode: str = ..., pwd: Optional[bytes] = ..., *, force_zip64: bool = ...) -> IO[bytes]: pass
    _StreamReader - def __call__(self, stream: IO[_Encoded], errors: str = ...) -> StreamReader: pass
    _StreamReader - def __call__(self, stream: IO[bytes], errors: str = ...) -> StreamReader: pass
    _StreamWriter - def __call__(self, stream: IO[_Encoded], errors: str = ...) -> StreamWriter: pass
    _StreamWriter - def __call__(self, stream: IO[bytes], errors: str = ...) -> StreamWriter: pass
    _Warn - def __call__(
        self, message: str, category: Optional[Type[Warning]] = ..., stacklevel: int = ..., source: Optional[Any] = ...
    ) -> None: pass
    _WarnCallbackProtocol - def __call__(
        self, message: str, category: Optional[Type[Warning]] = ..., stacklevel: int = ..., source: Optional[Any] = ...
    ) -> None: pass
    _WarnFunction - def __call__(self, message: str, category: Type[Warning] = ..., stacklevel: int = ..., source: PipeHandle = ...) -> None: pass
