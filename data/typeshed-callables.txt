Callables with 0 parameters: 220
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Any]
    Callable[[], Awaitable[Any]]
    Callable[[], BaseBrowser]
    Callable[[], BaseBrowser]
    Callable[[], BaseBrowser]
    Callable[[], BaseHandler]
    Callable[[], DOMImplementation]
    Callable[[], DOMImplementation]
    Callable[[], DOMImplementation]
    Callable[[], DOMImplementation]
    Callable[[], Generator[str, None, None]]
    Callable[[], Message]
    Callable[[], Message]
    Callable[[], Message]
    Callable[[], Message]
    Callable[[], Message]
    Callable[[], Message]
    Callable[[], Message]
    Callable[[], Message]
    Callable[[], None]
    Callable[[], None]
    Callable[[], None]
    Callable[[], None]
    Callable[[], None]
    Callable[[], None]
    Callable[[], None]
    Callable[[], None]
    Callable[[], None]
    Callable[[], None]
    Callable[[], None]
    Callable[[], None]
    Callable[[], None]
    Callable[[], None]
    Callable[[], None]
    Callable[[], None]
    Callable[[], None]
    Callable[[], None]
    Callable[[], None]
    Callable[[], None]
    Callable[[], None]
    Callable[[], None]
    Callable[[], None]
    Callable[[], None]
    Callable[[], None]
    Callable[[], None]
    Callable[[], None]
    Callable[[], None]
    Callable[[], None]
    Callable[[], None]
    Callable[[], None]
    Callable[[], None]
    Callable[[], Optional[_T]]
    Callable[[], Optional[_T]]
    Callable[[], Optional[_T]]
    Callable[[], Optional[bytes]]
    Callable[[], Text]
    Callable[[], Text]
    Callable[[], Tuple[Tuple[str, str, str], BaseException, BaseException, str]]
    Callable[[], _AggregateProtocol]
    Callable[[], _AggregateProtocol]
    Callable[[], _Dict]
    Callable[[], _Dict]
    Callable[[], _Dict]
    Callable[[], _Dict]
    Callable[[], _Dict]
    Callable[[], _M]
    Callable[[], _M]
    Callable[[], _T]
    Callable[[], _T]
    Callable[[], _T]
    Callable[[], _T]
    Callable[[], _T]
    Callable[[], _T]
    Callable[[], _T]
    Callable[[], _T]
    Callable[[], _T]
    Callable[[], _T]
    Callable[[], _T]
    Callable[[], _T]
    Callable[[], _T]
    Callable[[], _T]
    Callable[[], _T]
    Callable[[], _T]
    Callable[[], _T]
    Callable[[], _T]
    Callable[[], _T]
    Callable[[], _T]
    Callable[[], _T]
    Callable[[], _T]
    Callable[[], _T]
    Callable[[], _T]
    Callable[[], _VT]
    Callable[[], _VT]
    Callable[[], _VT]
    Callable[[], _VT]
    Callable[[], _VT]
    Callable[[], _VT]
    Callable[[], _VT]
    Callable[[], _VT]
    Callable[[], _VT]
    Callable[[], _VT]
    Callable[[], _VT]
    Callable[[], _VT]
    Callable[[], _VT]
    Callable[[], _VT]
    Callable[[], _V]
    Callable[[], bool]
    Callable[[], bool]
    Callable[[], bool]
    Callable[[], bool]
    Callable[[], bytes]
    Callable[[], bytes]
    Callable[[], bytes]
    Callable[[], bytes]
    Callable[[], email.message.Message]
    Callable[[], float]
    Callable[[], float]
    Callable[[], float]
    Callable[[], float]
    Callable[[], float]
    Callable[[], float]
    Callable[[], float]
    Callable[[], float]
    Callable[[], float]
    Callable[[], float]
    Callable[[], float]
    Callable[[], int]
    Callable[[], int]
    Callable[[], str]
    Callable[[], str]
    Callable[[], str]
    Callable[[], str]
    Callable[[], str]
    Callable[[], str]
    Callable[[], streams.StreamReaderProtocol]
    Callable[[], streams.StreamReaderProtocol]
Callables with 1 parameters: 521
    Callable[[AnyStr], AnyStr]
    Callable[[AnyStr], Any]
    Callable[[AnyStr], Any]
    Callable[[Any], Any]
    Callable[[Any], Any]
    Callable[[Any], Any]
    Callable[[Any], Any]
    Callable[[Any], Any]
    Callable[[Any], Any]
    Callable[[Any], Any]
    Callable[[Any], Any]
    Callable[[Any], Any]
    Callable[[Any], Any]
    Callable[[Any], Any]
    Callable[[Any], Any]
    Callable[[Any], Any]
    Callable[[Any], Any]
    Callable[[Any], Any]
    Callable[[Any], Any]
    Callable[[Any], Any]
    Callable[[Any], Any]
    Callable[[Any], Any]
    Callable[[Any], Any]
    Callable[[Any], Any]
    Callable[[Any], Any]
    Callable[[Any], None]
    Callable[[Any], None]
    Callable[[Any], None]
    Callable[[Any], None]
    Callable[[Any], None]
    Callable[[Any], None]
    Callable[[Any], None]
    Callable[[Any], None]
    Callable[[Any], None]
    Callable[[Any], None]
    Callable[[Any], None]
    Callable[[Any], Optional[MutableMapping[_KT, Any]]]
    Callable[[Any], _R]
    Callable[[Any], _R]
    Callable[[Any], _T]
    Callable[[Any], _T]
    Callable[[Any], _reducedtype]
    Callable[[Any], bool]
    Callable[[Any], bool]
    Callable[[Any], bool]
    Callable[[Any], str]
    Callable[[Any], str]
    Callable[[Any], str]
    Callable[[Any], str]
    Callable[[Any], str]
    Callable[[Any], str]
    Callable[[Any], str]
    Callable[[BaseException], None]
    Callable[[BaseException], None]
    Callable[[BaseException], None]
    Callable[[BaseException], None]
    Callable[[Callable[..., Any]], Callable[..., Any]]
    Callable[[Callable[..., Any]], Callable[..., Any]]
    Callable[[Callable[..., Any]], Command]
    Callable[[Callable[..., Any]], Command]
    Callable[[Callable[..., Any]], Group]
    Callable[[Callable[..., Any]], Group]
    Callable[[Callable[..., Generator[Any, Any, Any]]], Callable[..., None]]
    Callable[[Callable[..., _T]], Callable[..., _T]]
    Callable[[Callable[..., _T]], Callable[..., _T]]
    Callable[[Callable[..., _T]], Callable[..., _T]]
    Callable[[Callable[..., _T]], Callable[..., _T]]
    Callable[[Callable[..., _T]], Callable[..., _T]]
    Callable[[Callable[..., _T]], Callable[..., _T]]
    Callable[[Callable[..., _T]], Callable[..., _T]]
    Callable[[Callable[..., _T]], _lru_cache_wrapper[_T]]
    Callable[[Callable[..., _T]], _lru_cache_wrapper[_T]]
    Callable[[Channel], None]
    Callable[[ContentRange], Any]
    Callable[[Dict[Any, Any]], Any]
    Callable[[Dict[Any, Any]], Any]
    Callable[[Dict[Any, Any]], Any]
    Callable[[Dict[Any, Any]], Any]
    Callable[[Dict[str, Any]], Any]
    Callable[[Dict[str, Any]], Any]
    Callable[[Dict[str, Any]], None]
    Callable[[Dict[str, Any]], None]
    Callable[[Distribution], None]
    Callable[[DocTest], Any]
    Callable[[DocTest], Any]
    Callable[[DocTest], Any]
    Callable[[DocTest], Any]
    Callable[[Element], Text]
    Callable[[Element], Text]
    Callable[[Event[Canvas]], Any]
    Callable[[Event[Misc]], Any]
    Callable[[Event[Misc]], Any]
    Callable[[Event[Misc]], Any]
    Callable[[Event[Text]], Any]
    Callable[[Event[_W]], Any]
    Callable[[Future[_T]], Any]
    Callable[[Future[_T]], Any]
    Callable[[HeaderSet], Any]
    Callable[[IO[Any]], BabylMessage]
    Callable[[IO[Any]], BabylMessage]
    Callable[[IO[Any]], MHMessage]
    Callable[[IO[Any]], MHMessage]
    Callable[[IO[Any]], MMDFMessage]
    Callable[[IO[Any]], MMDFMessage]
    Callable[[IO[Any]], MaildirMessage]
    Callable[[IO[Any]], MaildirMessage]
    Callable[[IO[Any]], _MessageT]
    Callable[[IO[Any]], _MessageT]
    Callable[[IO[Any]], _MessageT]
    Callable[[IO[Any]], _MessageT]
    Callable[[IO[Any]], mboxMessage]
    Callable[[IO[Any]], mboxMessage]
    Callable[[Iterable[Tuple[Text, Text]]], _T]
    Callable[[List[Any]], _T]
    Callable[[List[Any]], _T]
    Callable[[List[TestCase]], TestSuite]
    Callable[[List[Tuple[Any, Any]]], Any]
    Callable[[List[Tuple[Any, Any]]], Any]
    Callable[[List[Tuple[Any, Any]]], Any]
    Callable[[List[Tuple[Any, Any]]], Any]
    Callable[[List[Tuple[str, Any]]], Any]
    Callable[[List[Tuple[str, Any]]], Any]
    Callable[[List[Tuple[str, Any]]], _T]
    Callable[[List[Tuple[str, Any]]], _T]
    Callable[[MIMEApplication], None]
    Callable[[MIMEApplication], None]
    Callable[[MIMEAudio], None]
    Callable[[MIMEImage], None]
    Callable[[Match[AnyStr]], AnyStr]
    Callable[[Match[AnyStr]], AnyStr]
    Callable[[Match[AnyStr]], AnyStr]
    Callable[[Match[AnyStr]], AnyStr]
    Callable[[Match[AnyStr]], AnyStr]
    Callable[[Match[AnyStr]], AnyStr]
    Callable[[Match[AnyStr]], AnyStr]
    Callable[[Match[AnyStr]], AnyStr]
    Callable[[Match[AnyStr]], AnyStr]
    Callable[[Match[AnyStr]], AnyStr]
    Callable[[Match[_AnyStr2]], _AnyStr2]
    Callable[[Match[_AnyStr2]], _AnyStr2]
    Callable[[Message], None]
    Callable[[Message], None]
    Callable[[None], Any]
    Callable[[None], None]
    Callable[[None], None]
    Callable[[OSError], Any]
    Callable[[Optional[BaseException]], None]
    Callable[[Optional[BaseException]], None]
    Callable[[Optional[Exception]], Any]
    Callable[[Optional[Exception]], Any]
    Callable[[Optional[Exception]], _T]
    Callable[[Optional[Exception]], _T]
    Callable[[Optional[Exception]], _T]
    Callable[[Optional[Exception]], _T]
    Callable[[Optional[List[Tuple[str, float]]]], _T]
    Callable[[Optional[float]], struct_time]
    Callable[[Optional[float]], struct_time]
    Callable[[Optional[str]], Any]
    Callable[[Path], bool]
    Callable[[PreparedRequest], PreparedRequest]
    Callable[[PreparedRequest], PreparedRequest]
    Callable[[ReadableBuffer], _Hash]
    Callable[[ReadableBuffer], _Hash]
    Callable[[ReadableBuffer], _Hash]
    Callable[[ReadableBuffer], _Hash]
    Callable[[ReadableBuffer], _Hash]
    Callable[[ReadableBuffer], _Hash]
    Callable[[ReadableBuffer], _Hash]
    Callable[[ReadableBuffer], _Hash]
    Callable[[ReadableBuffer], _Hash]
    Callable[[ReadableBuffer], _Hash]
    Callable[[ReferenceType[_T]], Any]
    Callable[[ReferenceType[_T]], Any]
    Callable[[ReferenceType[_T]], Any]
    Callable[[RequestCacheControl], Any]
    Callable[[Requirement], _T]
    Callable[[Requirement], _T]
    Callable[[Response], Response]
    Callable[[Response], Response]
    Callable[[Response], Response]
    Callable[[Sequence[_KT]], _KT]
    Callable[[Sequence[_KT]], _KT]
    Callable[[Sequence[_T]], _T]
    Callable[[Sequence[int]], bytes]
    Callable[[Sequence[int]], bytes]
    Callable[[Sequence[int]], bytes]
    Callable[[Sequence[int]], bytes]
    Callable[[Sized], int]
    Callable[[StringVar], Any]
    Callable[[TarInfo], Optional[TarInfo]]
    Callable[[TarInfo], Optional[TarInfo]]
    Callable[[TarInfo], Optional[TarInfo]]
    Callable[[Tuple[int, str, _Pos, _Pos, str]], None]
    Callable[[Tuple[int, str, _Pos, _Pos, str]], None]
    Callable[[Type[_T]], Type[_T]]
    Callable[[Type[_T]], Type[_T]]
    Callable[[Type[_T]], Type[_T]]
    Callable[[Type[_T]], Type[_T]]
    Callable[[Type[_T]], Type[_T]]
    Callable[[Type[_T]], Type[_T]]
    Callable[[Type[_T]], Type[_T]]
    Callable[[Type[_T]], Type[_T]]
    Callable[[Type[_T]], Type[_T]]
    Callable[[UnicodeError], Tuple[Union[str, bytes], int]]
    Callable[[UnicodeError], Tuple[Union[str, bytes], int]]
    Callable[[UnicodeError], Tuple[Union[str, bytes], int]]
    Callable[[UnicodeError], Tuple[Union[str, bytes], int]]
    Callable[[Unpickler], None]
    Callable[[UnraisableHookArgs], Any]
    Callable[[WWWAuthenticate], Any]
    Callable[[_AnyCallable], _AnyCallable]
    Callable[[_C], Any]
    Callable[[_C], Any]
    Callable[[_ExceptHookArgs], Any]
    Callable[[_FT], _FT]
    Callable[[_FT], _FT]
    Callable[[_FT], _FT]
    Callable[[_F], _F]
    Callable[[_F], _F]
    Callable[[_F], _F]
    Callable[[_F], _F]
    Callable[[_F], _F]
    Callable[[_F], _F]
    Callable[[_F], _F]
    Callable[[_F], _F]
    Callable[[_KT], None]
    Callable[[_KT], None]
    Callable[[_KT], None]
    Callable[[_KT], _VT]
    Callable[[_KT], _VT]
    Callable[[_KT], _VT]
    Callable[[_Reduce[_TypeT]], _TypeT]
    Callable[[_Reduce[_TypeT]], _TypeT]
    Callable[[_Reduce[_TypeT]], _TypeT]
    Callable[[_Reduce[_TypeT]], _TypeT]
    Callable[[_Reduce[_TypeT]], _TypeT]
    Callable[[_Reduce[_TypeT]], _TypeT]
    Callable[[_ReprFunc], _ReprFunc]
    Callable[[_S], Any]
    Callable[[_S], Any]
    Callable[[_S], Any]
    Callable[[_S], Any]
    Callable[[_S], Any]
    Callable[[_S], _T]
    Callable[[_S], _T]
    Callable[[_S], _T]
    Callable[[_S], _T]
    Callable[[_T1], SupportsLessThan]
    Callable[[_T1], SupportsLessThan]
    Callable[[_T1], _S]
    Callable[[_T1], _S]
    Callable[[_T1], _S]
    Callable[[_T1], _S]
    Callable[[_T1], _T2]
    Callable[[_T], Any]
    Callable[[_T], Any]
    Callable[[_T], Any]
    Callable[[_T], Any]
    Callable[[_T], Any]
    Callable[[_T], Any]
    Callable[[_T], Any]
    Callable[[_T], Any]
    Callable[[_T], Any]
    Callable[[_T], Any]
    Callable[[_T], Any]
    Callable[[_T], Any]
    Callable[[_T], Any]
    Callable[[_T], Any]
    Callable[[_T], Any]
    Callable[[_T], Any]
    Callable[[_T], Any]
    Callable[[_T], Any]
    Callable[[_T], Any]
    Callable[[_T], Any]
    Callable[[_T], Any]
    Callable[[_T], Any]
    Callable[[_T], Any]
    Callable[[_T], Any]
    Callable[[_T], Any]
    Callable[[_T], Any]
    Callable[[_T], Any]
    Callable[[_T], Any]
    Callable[[_T], Any]
    Callable[[_T], Any]
    Callable[[_T], Any]
    Callable[[_T], Any]
    Callable[[_T], Any]
    Callable[[_T], Any]
    Callable[[_T], Any]
    Callable[[_T], Any]
    Callable[[_T], None]
    Callable[[_T], None]
    Callable[[_T], None]
    Callable[[_T], None]
    Callable[[_T], None]
    Callable[[_T], None]
    Callable[[_T], None]
    Callable[[_T], None]
    Callable[[_T], None]
    Callable[[_T], None]
    Callable[[_T], SupportsLessThan]
    Callable[[_T], SupportsLessThan]
    Callable[[_T], SupportsLessThan]
    Callable[[_T], SupportsLessThan]
    Callable[[_T], SupportsLessThan]
    Callable[[_T], SupportsLessThan]
    Callable[[_T], SupportsLessThan]
    Callable[[_T], SupportsLessThan]
    Callable[[_T], SupportsLessThan]
    Callable[[_T], SupportsLessThan]
    Callable[[_T], SupportsLessThan]
    Callable[[_T], SupportsLessThan]
    Callable[[_T], SupportsLessThan]
    Callable[[_T], SupportsLessThan]
    Callable[[_T], SupportsLessThan]
    Callable[[_T], Union[int, float, str, bytes]]
    Callable[[_T], Union[int, float, str, bytes]]
    Callable[[_T], _S]
    Callable[[_T], _T]
    Callable[[_T], _T]
    Callable[[_T], _T]
    Callable[[_T], _T]
    Callable[[_T], _T]
    Callable[[_T], _T]
    Callable[[_T], bool]
    Callable[[_T], bool]
    Callable[[_T], str]
    Callable[[_TypeT], Union[str, _Reduce[_TypeT]]]
    Callable[[_TypeT], Union[str, _Reduce[_TypeT]]]
    Callable[[_TypeT], Union[str, _Reduce[_TypeT]]]
    Callable[[_VT], _VT]
    Callable[[_VT], _VT]
    Callable[[_VT], float]
    Callable[[_VT], float]
    Callable[[_VT], float]
    Callable[[_VT], float]
    Callable[[_VT], float]
    Callable[[_V], _R]
    Callable[[_V], _R]
    Callable[[_str], float]
    Callable[[_str], float]
    Callable[[_timerFunc], _timerFunc]
    Callable[[_timerFunc], _timerFunc]
    Callable[[bool], None]
    Callable[[bytes], Any]
    Callable[[bytes], Any]
    Callable[[bytes], Any]
    Callable[[bytes], Any]
    Callable[[bytes], Any]
    Callable[[bytes], Any]
    Callable[[bytes], Any]
    Callable[[bytes], Any]
    Callable[[bytes], Any]
    Callable[[bytes], Any]
    Callable[[bytes], Any]
    Callable[[bytes], Any]
    Callable[[bytes], Any]
    Callable[[bytes], Any]
    Callable[[bytes], None]
    Callable[[bytes], None]
    Callable[[bytes], Optional[bytes]]
    Callable[[bytes], Optional[bytes]]
    Callable[[bytes], Optional[bytes]]
    Callable[[bytes], _HashType]
    Callable[[bytes], _HashType]
    Callable[[bytes], bytes]
    Callable[[bytes], bytes]
    Callable[[bytes], bytes]
    Callable[[bytes], bytes]
    Callable[[float], None]
    Callable[[float], None]
    Callable[[float], None]
    Callable[[float], _ScoreCastFuncReturn]
    Callable[[float], _ScoreCastFuncReturn]
    Callable[[float], _ScoreCastFuncReturn]
    Callable[[float], _ScoreCastFuncReturn]
    Callable[[futures.Future[Any]], None]
    Callable[[futures.Future[Any]], None]
    Callable[[int], Any]
    Callable[[int], Any]
    Callable[[int], None]
    Callable[[int], None]
    Callable[[int], None]
    Callable[[int], None]
    Callable[[int], Tuple[_Text, ...]]
    Callable[[int], Tuple[str, ...]]
    Callable[[int], int]
    Callable[[int], int]
    Callable[[object], Any]
    Callable[[object], Any]
    Callable[[object], str]
    Callable[[object], str]
    Callable[[object], str]
    Callable[[object], str]
    Callable[[object], str]
    Callable[[str], Any]
    Callable[[str], Any]
    Callable[[str], Any]
    Callable[[str], Any]
    Callable[[str], Any]
    Callable[[str], Any]
    Callable[[str], Any]
    Callable[[str], Any]
    Callable[[str], Any]
    Callable[[str], Any]
    Callable[[str], Any]
    Callable[[str], Any]
    Callable[[str], Any]
    Callable[[str], Any]
    Callable[[str], Any]
    Callable[[str], Any]
    Callable[[str], Any]
    Callable[[str], Any]
    Callable[[str], Any]
    Callable[[str], Any]
    Callable[[str], Any]
    Callable[[str], Any]
    Callable[[str], Any]
    Callable[[str], Any]
    Callable[[str], Any]
    Callable[[str], Any]
    Callable[[str], Any]
    Callable[[str], Any]
    Callable[[str], Any]
    Callable[[str], Any]
    Callable[[str], Any]
    Callable[[str], Any]
    Callable[[str], Any]
    Callable[[str], Any]
    Callable[[str], Any]
    Callable[[str], Any]
    Callable[[str], Any]
    Callable[[str], Any]
    Callable[[str], Any]
    Callable[[str], Any]
    Callable[[str], Any]
    Callable[[str], Any]
    Callable[[str], Any]
    Callable[[str], Any]
    Callable[[str], Any]
    Callable[[str], Any]
    Callable[[str], Any]
    Callable[[str], Any]
    Callable[[str], Any]
    Callable[[str], Any]
    Callable[[str], Any]
    Callable[[str], Any]
    Callable[[str], Any]
    Callable[[str], Any]
    Callable[[str], Any]
    Callable[[str], Any]
    Callable[[str], Any]
    Callable[[str], Any]
    Callable[[str], Any]
    Callable[[str], None]
    Callable[[str], None]
    Callable[[str], None]
    Callable[[str], None]
    Callable[[str], None]
    Callable[[str], None]
    Callable[[str], None]
    Callable[[str], None]
    Callable[[str], None]
    Callable[[str], None]
    Callable[[str], None]
    Callable[[str], None]
    Callable[[str], None]
    Callable[[str], None]
    Callable[[str], None]
    Callable[[str], None]
    Callable[[str], None]
    Callable[[str], None]
    Callable[[str], None]
    Callable[[str], None]
    Callable[[str], None]
    Callable[[str], None]
    Callable[[str], None]
    Callable[[str], Optional[CodecInfo]]
    Callable[[str], Optional[CodecInfo]]
    Callable[[str], Optional[CodecInfo]]
    Callable[[str], _R]
    Callable[[str], _R]
    Callable[[str], _T]
    Callable[[str], _T]
    Callable[[str], _T]
    Callable[[str], _T]
    Callable[[str], _T]
    Callable[[str], _T]
    Callable[[str], bool]
    Callable[[str], bool]
    Callable[[str], bool]
    Callable[[str], bool]
    Callable[[str], bool]
    Callable[[str], bool]
    Callable[[str], float]
    Callable[[str], importlib.abc.PathEntryFinder]
    Callable[[str], int]
    Callable[[str], str]
    Callable[[str], str]
    Callable[[str], str]
    Callable[[str], str]
    Callable[[str], str]
    Callable[[str], str]
    Callable[[str], str]
    Callable[[str], str]
    Callable[[str], str]
    Callable[[str], str]
    Callable[[str], str]
    Callable[[str], str]
    Callable[[str], str]
    Callable[[str], str]
    Callable[[str], str]
    Callable[[str], str]
    Callable[[str], str]
    Callable[[str], str]
    Callable[[text_type], Markup]
    Callable[[text_type], Markup]
    Callable[[tkinter.Event[Treeview]], Any]
    Callable[[tkinter.StringVar], Any]
    Callable[[types.MethodType], Any]
    Callable[[types.ModuleType], IResourceProvider]
Callables with 2 parameters: 137
    Callable[[AbstractEventLoop, Generator[Any, None, _T]], Future[_T]]
    Callable[[AbstractEventLoop, Generator[Any, None, _T]], Future[_T]]
    Callable[[AbstractEventLoop, Generator[Any, None, _T]], Future[_T]]
    Callable[[AbstractEventLoop, Generator[Any, None, _T]], Future[_T]]
    Callable[[Action, Iterable[Tuple[Text, Action]]], Any]
    Callable[[Action, Iterable[Tuple[str, Action]]], Any]
    Callable[[Any, Any], None]
    Callable[[Any, Any], None]
    Callable[[Any, Any], None]
    Callable[[Any, Any], None]
    Callable[[Any, Any], None]
    Callable[[Any, Any], None]
    Callable[[Any, Any], None]
    Callable[[Any, List[_AnyStr]], Set[_AnyStr]]
    Callable[[Any, List[str]], Set[str]]
    Callable[[AnyStr, AnyStr], None]
    Callable[[AnyStr, AnyStr], None]
    Callable[[AnyStr, AnyStr], None]
    Callable[[AnyStr, AnyStr], None]
    Callable[[AnyStr, Callable[[AnyStr, AnyStr, AnyStr], AnyStr]], AnyStr]
    Callable[[AnyStr, Callable[[AnyStr, AnyStr, AnyStr], AnyStr]], AnyStr]
    Callable[[AnyStr, Callable[[AnyStr, AnyStr, AnyStr], AnyStr]], AnyStr]
    Callable[[AnyStr, List[AnyStr]], Iterable[AnyStr]]
    Callable[[BaseRepresenter, Any], Node]
    Callable[[BaseRepresenter, Any], Node]
    Callable[[Channel, Tuple[str, int]], None]
    Callable[[Dict[Text, Optional[Text]], None], _U]
    Callable[[Dict[Text, Optional[Text]], _T], _U]
    Callable[[Iterable[str], str], str]
    Callable[[Loader, Node], Any]
    Callable[[Optional[str], Tuple[_Marshallable, ...]], Union[Fault, Tuple[_Marshallable, ...]]]
    Callable[[Optional[str], Tuple[_Marshallable, ...]], Union[Fault, Tuple[_Marshallable, ...]]]
    Callable[[Port, bool], None]
    Callable[[Status, str], None]
    Callable[[StrOrBytesPath, str], IO[AnyStr]]
    Callable[[StrOrBytesPath, str], IO[AnyStr]]
    Callable[[StrOrBytesPath, str], IO[AnyStr]]
    Callable[[StrOrBytesPath, str], IO[AnyStr]]
    Callable[[StrOrBytesPath, str], IO[AnyStr]]
    Callable[[StrOrBytesPath, str], IO[AnyStr]]
    Callable[[StrOrBytesPath, str], IO[Any]]
    Callable[[StrPath, List[str]], Iterable[str]]
    Callable[[StrPath, List[str]], Iterable[str]]
    Callable[[Text, str], IO[AnyStr]]
    Callable[[Text, str], IO[AnyStr]]
    Callable[[Text, str], IO[Any]]
    Callable[[Union[int, str], str], int]
    Callable[[Unmarshaller, str], None]
    Callable[[Unmarshaller, str], None]
    Callable[[Unpickler, Any], None]
    Callable[[_KT, _VT], None]
    Callable[[_KT, _VT], None]
    Callable[[_KT, _VT], None]
    Callable[[_R, _T], Node]
    Callable[[_R, _T], Node]
    Callable[[_R, _T], Node]
    Callable[[_R, _T], Node]
    Callable[[_T, _S], _T]
    Callable[[_T, _S], _T]
    Callable[[_T, _S], _T]
    Callable[[_T, _S], _T]
    Callable[[_T, _S], _T]
    Callable[[_T, _S], _T]
    Callable[[_T, _T], Any]
    Callable[[_T, _T], Any]
    Callable[[_T, _T], _T]
    Callable[[_T, _T], _T]
    Callable[[_T, _T], _T]
    Callable[[_T, _T], _T]
    Callable[[_T, _T], _T]
    Callable[[_T, _T], _T]
    Callable[[_T, _T], int]
    Callable[[_T, _T], int]
    Callable[[_T, _T], int]
    Callable[[_T, _T], int]
    Callable[[_T1, _T2], _S]
    Callable[[_T1, _T2], _S]
    Callable[[_T1, _T2], _S]
    Callable[[_T1, _T2], _S]
    Callable[[_next, _token], _callback]
    Callable[[_next, _token], _callback]
    Callable[[bytes, Optional[BinaryIO]], Optional[str]]
    Callable[[bytes, Optional[BinaryIO]], Optional[str]]
    Callable[[float, float], Any]
    Callable[[float, float], Any]
    Callable[[float, float], Any]
    Callable[[float, float], Any]
    Callable[[float, float], Any]
    Callable[[float, float], Any]
    Callable[[float, float], Any]
    Callable[[float, float], Any]
    Callable[[float, float], Any]
    Callable[[float, float], Any]
    Callable[[float, float], Any]
    Callable[[float, float], Any]
    Callable[[float, float], Any]
    Callable[[float, float], Any]
    Callable[[int, _JackPositionT], None]
    Callable[[int, float], Any]
    Callable[[int, int], Any]
    Callable[[int, int], Any]
    Callable[[int, int], Any]
    Callable[[int, int], Any]
    Callable[[int, int], Any]
    Callable[[int, int], Any]
    Callable[[int, int], Any]
    Callable[[int, int], Any]
    Callable[[int, int], Any]
    Callable[[int, int], Any]
    Callable[[int, int], Any]
    Callable[[str, Any], None]
    Callable[[str, Callable[[Iterable[str], str], str]], None]
    Callable[[str, Sequence[Tuple[str, str]]], None]
    Callable[[str, Tuple[Any, ...]], Any]
    Callable[[str, Tuple[Any, ...]], Any]
    Callable[[str, Tuple[_Marshallable, ...]], _Marshallable]
    Callable[[str, Tuple[_Marshallable, ...]], _Marshallable]
    Callable[[str, _Model], Any]
    Callable[[str, _Model], Any]
    Callable[[str, bool], None]
    Callable[[str, bool], None]
    Callable[[str, int], Optional[str]]
    Callable[[str, int], Optional[str]]
    Callable[[str, str], Any]
    Callable[[str, str], Any]
    Callable[[str, str], Any]
    Callable[[str, str], Any]
    Callable[[str, str], Any]
    Callable[[str, str], Any]
    Callable[[str, str], None]
    Callable[[str, str], None]
    Callable[[str, str], None]
    Callable[[str, str], int]
    Callable[[str, str], str]
    Callable[[str, str], str]
    Callable[[str, str], str]
    Callable[[type, Attribute], Any]
Callables with 3 parameters: 43
    Callable[[Any, Any, Any], Any]
    Callable[[Any, _AnyPath, Any], Any]
    Callable[[AnyStr, AnyStr, AnyStr], AnyStr]
    Callable[[BaseException, int, BaseException], BaseException]
    Callable[[Channel, _Addr, _Addr], None]
    Callable[[Context, List[str], str], Iterable[Union[str, Tuple[str, str]]]]
    Callable[[Context, Parameter, Optional[str]], Any]
    Callable[[Context, Parameter, str], Any]
    Callable[[Context, Parameter, str], Any]
    Callable[[Context, Union[Option, Parameter], Union[bool, int, str]], _T]
    Callable[[Context, Union[Option, Parameter], int], Any]
    Callable[[Context, Union[Option, Parameter], str], Any]
    Callable[[FrameType, str, Any], Any]
    Callable[[Marshaller, Any, Callable[[str], Any]], None]
    Callable[[Marshaller, str, Callable[[str], None]], None]
    Callable[[Optional[str], str, str], None]
    Callable[[Optional[str], str, str], None]
    Callable[[Port, Port, bool], None]
    Callable[[Port, str, str], None]
    Callable[[SSLObject, str, SSLContext], Union[None, int]]
    Callable[[Type[BaseException], BaseException, TracebackType], Any]
    Callable[[Type[BaseException], BaseException, TracebackType], Any]
    Callable[[_T, AnyStr, List[AnyStr]], Any]
    Callable[[_T, AnyStr, List[AnyStr]], Any]
    Callable[[_T, AnyStr, List[AnyStr]], Any]
    Callable[[_T, AnyStr, List[AnyStr]], Any]
    Callable[[_T1, _T2, _T3], _S]
    Callable[[_T1, _T2, _T3], _S]
    Callable[[_T1, _T2, _T3], _S]
    Callable[[_T1, _T2, _T3], _S]
    Callable[[int, int, int], None]
    Callable[[int, int, int], None]
    Callable[[int, int, int], object]
    Callable[[int, str, int], None]
    Callable[[socket.socket, bytes, bytes], Any]
    Callable[[socket.socket, bytes, bytes], Any]
    Callable[[str, Optional[str], int], Any]
    Callable[[str, Optional[str], int], Any]
    Callable[[str, Union[Dict[str, str]], List[str]], Any]
    Callable[[str, Union[Dict[str, str]], List[str]], Any]
    Callable[[str, str, str], Any]
    Callable[[str, str, str], Any]
    Callable[[str, str, str], Any]
Callables with 4 parameters: 13
    Callable[[_T1, _T2, _T3, _T4], _S]
    Callable[[_T1, _T2, _T3, _T4], _S]
    Callable[[_T1, _T2, _T3, _T4], _S]
    Callable[[_T1, _T2, _T3, _T4], _S]
    Callable[[int, int, _JackPositionT, bool], None]
    Callable[[str, AnyStr, str, str], str]
    Callable[[str, Optional[str], Optional[str], Optional[str]], int]
    Callable[[str, Optional[str], Optional[str], Optional[str]], int]
    Callable[[str, Optional[str], Optional[str], bool], Any]
    Callable[[str, Optional[str], Optional[str], bool], Any]
    Callable[[str, Optional[str], str, Optional[str]], Any]
    Callable[[str, Optional[str], str, Optional[str]], Any]
    Callable[[str, Union[str, Sequence[str]], str, str], None]
Callables with 5 parameters: 8
    Callable[[_T1, _T2, _T3, _T4, _T5], _S]
    Callable[[_T1, _T2, _T3, _T4, _T5], _S]
    Callable[[_T1, _T2, _T3, _T4, _T5], _S]
    Callable[[_T1, _T2, _T3, _T4, _T5], _S]
    Callable[[str, Optional[str], str, Optional[str], str], Any]
    Callable[[str, Optional[str], str, Optional[str], str], Any]
    Callable[[str, str, str, Optional[str], bool], Any]
    Callable[[str, str, str, Optional[str], bool], Any]
Callables with arbitrary parameters: 364
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Any]
    Callable[..., Awaitable[Any]]
    Callable[..., Awaitable[_T]]
    Callable[..., Awaitable[_T]]
    Callable[..., BaseHTTPRequestHandler]
    Callable[..., BaseRequestHandler]
    Callable[..., BaseRequestHandler]
    Callable[..., BaseRequestHandler]
    Callable[..., BaseRequestHandler]
    Callable[..., BaseRequestHandler]
    Callable[..., BaseRequestHandler]
    Callable[..., BaseRequestHandler]
    Callable[..., BaseRequestHandler]
    Callable[..., BaseRequestHandler]
    Callable[..., BaseRequestHandler]
    Callable[..., BaseRequestHandler]
    Callable[..., BaseRequestHandler]
    Callable[..., ContextManager[_T]]
    Callable[..., ContextManager[_T]]
    Callable[..., Element]
    Callable[..., Element]
    Callable[..., Element]
    Callable[..., Element]
    Callable[..., Generator[Any, Any, Any]]
    Callable[..., IO[AnyStr]]
    Callable[..., Iterator[_T]]
    Callable[..., Iterator[_T]]
    Callable[..., LazyLoader]
    Callable[..., LogRecord]
    Callable[..., LogRecord]
    Callable[..., LogRecord]
    Callable[..., LogRecord]
    Callable[..., None]
    Callable[..., None]
    Callable[..., None]
    Callable[..., None]
    Callable[..., None]
    Callable[..., None]
    Callable[..., None]
    Callable[..., None]
    Callable[..., None]
    Callable[..., None]
    Callable[..., None]
    Callable[..., None]
    Callable[..., None]
    Callable[..., None]
    Callable[..., None]
    Callable[..., None]
    Callable[..., None]
    Callable[..., None]
    Callable[..., Optional[Tuple[float, float]]]
    Callable[..., Optional[Tuple[float, float]]]
    Callable[..., Optional[Tuple[float, float]]]
    Callable[..., Optional[Tuple[float, float]]]
    Callable[..., Optional[Tuple[float, float]]]
    Callable[..., SSLContext]
    Callable[..., SSLContext]
    Callable[..., Sequence[Any]]
    Callable[..., Signer]
    Callable[..., Signer]
    Callable[..., Signer]
    Callable[..., Signer]
    Callable[..., Signer]
    Callable[..., Union[str, Element]]
    Callable[..., Union[str, Element]]
    Callable[..., Union[str, Element]]
    Callable[..., _Freezable]
    Callable[..., _KT]
    Callable[..., _KT]
    Callable[..., _R]
    Callable[..., _R]
    Callable[..., _R]
    Callable[..., _R]
    Callable[..., _R]
    Callable[..., _S]
    Callable[..., _S]
    Callable[..., _S]
    Callable[..., _S]
    Callable[..., _S]
    Callable[..., _S]
    Callable[..., _S]
    Callable[..., _S]
    Callable[..., _T]
    Callable[..., _T]
    Callable[..., _T]
    Callable[..., _T]
    Callable[..., _T]
    Callable[..., _T]
    Callable[..., _T]
    Callable[..., _T]
    Callable[..., _T]
    Callable[..., _T]
    Callable[..., _T]
    Callable[..., _T]
    Callable[..., _T]
    Callable[..., _T]
    Callable[..., _T]
    Callable[..., _T]
    Callable[..., _T]
    Callable[..., _T]
    Callable[..., _T]
    Callable[..., _T]
    Callable[..., _T]
    Callable[..., _T]
    Callable[..., _T]
    Callable[..., _T]
    Callable[..., _T]
    Callable[..., _T]
    Callable[..., _T]
    Callable[..., _T]
    Callable[..., _T]
    Callable[..., _T]
    Callable[..., _T]
    Callable[..., _T]
    Callable[..., _T]
    Callable[..., _T]
    Callable[..., _T]
    Callable[..., _T]
    Callable[..., _T]
    Callable[..., _T]
    Callable[..., _T]
    Callable[..., _T]
    Callable[..., _T]
    Callable[..., _T]
    Callable[..., _T]
    Callable[..., _T]
    Callable[..., _T]
    Callable[..., _T]
    Callable[..., _T]
    Callable[..., _T]
    Callable[..., _T]
    Callable[..., _T]
    Callable[..., _T]
    Callable[..., _T]
    Callable[..., _T]
    Callable[..., _T]
    Callable[..., _T]
    Callable[..., _T]
    Callable[..., _T]
    Callable[..., _T]
    Callable[..., _T]
    Callable[..., _T]
    Callable[..., _T]
    Callable[..., _Text]
    Callable[..., bytes]
    Callable[..., bytes]
    Callable[..., object]
    Callable[..., object]
    Callable[..., object]
    Callable[..., str]
    Callable[..., types.ModuleType]
    Callable[..., types.ModuleType]
    Callable[..., types.ModuleType]
    Callable[..., types.ModuleType]
    Callable[..., types.ModuleType]
    Callable[..., types.ModuleType]
    Callable[_P, AsyncContextManager[_T]]
    Callable[_P, AsyncIterator[_T]]
    Callable[_P, Iterator[_T]]
    Callable[_P, _GeneratorContextManager[_T]]
Callback Protocols: 37
    FileWrapper - def __call__(self, file: _Readable, block_size: int = ...) -> Iterable[bytes]: pass
    FileWrapper - def __call__(self, file: _Readable, block_size: int = ...) -> Iterable[bytes]: pass
    HTTPConnectionProtocol - def __call__(self, host: str, timeout: int = ..., **http_con_args: Any) -> HTTPConnection: pass
    IdentityFunction - def __call__(self, __x: _T) -> _T: pass
    IdentityFunction - def __call__(self, __x: _T) -> _T: pass
    StartResponse - def __call__(
        self, status: str, headers: List[Tuple[str, str]], exc_info: Optional[_OptExcInfo] = ...
    ) -> Callable[[bytes], Any]: pass
    StartResponse - def __call__(
        self, status: str, headers: List[Tuple[str, str]], exc_info: Optional[_OptExcInfo] = ...
    ) -> Callable[[bytes], Any]: pass
    _AcquireFunc - def __call__(self, block: bool = ..., timeout: Optional[float] = ...) -> bool: pass
    _AuthObject - @overload
    def __call__(self, challenge: None = ...) -> Optional[str]: pass
    _Callback - def __call__(self, attrs: _Attrs, new: bool = ...) -> _Attrs: pass
    _Decoder - def __call__(self, input: _Encoded, errors: str = ...) -> Tuple[_Decoded, int]: pass
    _Decoder - def __call__(self, input: bytes, errors: str = ...) -> Tuple[str, int]: pass
    _DispatchArity0 - def __call__(self) -> _Marshallable: pass
    _DispatchArity1 - def __call__(self, __arg1: _Marshallable) -> _Marshallable: pass
    _DispatchArity2 - def __call__(self, __arg1: _Marshallable, __arg2: _Marshallable) -> _Marshallable: pass
    _DispatchArity3 - def __call__(self, __arg1: _Marshallable, __arg2: _Marshallable, __arg3: _Marshallable) -> _Marshallable: pass
    _DispatchArity4 - def __call__(
        self, __arg1: _Marshallable, __arg2: _Marshallable, __arg3: _Marshallable, __arg4: _Marshallable
    ) -> _Marshallable: pass
    _DispatchArityN - def __call__(self, *args: _Marshallable) -> _Marshallable: pass
    _Encoder - def __call__(self, input: _Decoded, errors: str = ...) -> Tuple[_Encoded, int]: pass
    _Encoder - def __call__(self, input: str, errors: str = ...) -> Tuple[bytes, int]: pass
    _ExceptionReportingCallback - def __call__(self, __exc: Type[BaseException], __val: BaseException, __tb: TracebackType) -> Any: pass
    _FormatterClass - def __call__(self, prog: str) -> HelpFormatter: pass
    _FormatterClass - def __call__(self, prog: str) -> HelpFormatter: pass
    _IncrementalDecoder - def __call__(self, errors: str = ...) -> IncrementalDecoder: pass
    _IncrementalDecoder - def __call__(self, errors: str = ...) -> IncrementalDecoder: pass
    _IncrementalEncoder - def __call__(self, errors: str = ...) -> IncrementalEncoder: pass
    _IncrementalEncoder - def __call__(self, errors: str = ...) -> IncrementalEncoder: pass
    _PathOpenProtocol - def __call__(self, mode: str = ..., pwd: Optional[bytes] = ..., *, force_zip64: bool = ...) -> IO[bytes]: pass
    _PathOpenProtocol - def __call__(self, mode: str = ..., pwd: Optional[bytes] = ..., *, force_zip64: bool = ...) -> IO[bytes]: pass
    _StreamFactory - def __call__(
        self, total_content_length: Optional[int], filename: str, content_type: str, content_length: Optional[int] = ...
    ) -> IO[bytes]: pass
    _StreamReader - def __call__(self, stream: IO[_Encoded], errors: str = ...) -> StreamReader: pass
    _StreamReader - def __call__(self, stream: IO[bytes], errors: str = ...) -> StreamReader: pass
    _StreamWriter - def __call__(self, stream: IO[_Encoded], errors: str = ...) -> StreamWriter: pass
    _StreamWriter - def __call__(self, stream: IO[bytes], errors: str = ...) -> StreamWriter: pass
    _Warn - def __call__(
        self, message: str, category: Optional[Type[Warning]] = ..., stacklevel: int = ..., source: Optional[Any] = ...
    ) -> None: pass
    _WarnCallbackProtocol - def __call__(
        self, message: str, category: Optional[Type[Warning]] = ..., stacklevel: int = ..., source: Optional[Any] = ...
    ) -> None: pass
    _WarnFunction - def __call__(self, message: str, category: Type[Warning] = ..., stacklevel: int = ..., source: PipeHandle = ...) -> None: pass
